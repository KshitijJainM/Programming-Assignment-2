?list
message("Getting cached data")
# makeCacheMatrix creates a list containing a function to
# 1-set the value of the matrix
# 2-get the value of the matrix
# 3-set the value of inverse of matrix
# 4-get the value of inverse of matrix
makeCacheMatrix <- function(y = matrix()) {
mat <- NULL
setmat <- function(x) {
y <<- x
mat <<- NULL
}
get <- function() y
setinv <- function(inverse) mat <<- inverse
getinv <- function() mat
list(setmat=setmat, get=get, setinv=setinv, getinv=getinv)
}
# The cacheSolve fn returns the inverse of the matrix.
# we assume that matrix is always invertible.
cacheSolve <- function(y, ...) {
mat <- y$getinverse()
if(!is.null(mat)) {
message("Getting cached data")
return(mat)
}
data <- y$get()
mat <- solve(data)
y$setinv(mat)
mat
}
1
22
2224
x = rbind(c(1, -1/4), c(-1/4, 1))
> m = makeCacheMatrix(x)m$get()
x = rbind(c(1, -1/4), c(-1/4, 1))
> m = makeCacheMatrix(x)m$get()
x = rbind(c(1, -1/4), c(-1/4, 1))
> m = makeCacheMatrix(x)m$get()
y = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(y)
m$get()
cacheSolve(m)
cacheSolve(m)
y = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(y)
m$get()
cacheSolve(m)
cacheSolve(m)
m$set(y)
m$get(y)
cacheSolve(m)
y = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(y)
m$get()
cacheSolve(m)
cacheSolve(m)
y = matrix(1:1000000, 5000, 200)
y = as.data.frame(y)
m = makeCacheMatrix(y)
m$setmat(y)
cacheSolve(m)
y = matrix(1:1000000, 5000, 200)
y = as.data.frame(y)
m = makeCacheMatrix(y)
m$setmat(y)
cacheSolve(m)
y = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(y)
m$get()
cacheSolve(m)
cacheSolve(m)
# makeCacheMatrix creates a list containing a function to
# 1-set the value of the matrix
# 2-get the value of the matrix
# 3-set the value of inverse of matrix
# 4-get the value of inverse of matrix
makeCacheMatrix <- function(y = matrix()) {
mat <- NULL
setmat <- function(x) {
y <<- x
mat <<- NULL
}
get <- function() y
setinv <- function(inverse) mat <<- inverse
getinv <- function() mat
list(setmat=setmat, get=get, setinv=setinv, getinv=getinv)
}
# The cacheSolve fn returns the inverse of the matrix.
# we assume that matrix is always invertible.
cacheSolve <- function(y, ...) {
mat <- y$getinv()
if(!is.null(mat)) {
message("Getting cached data")
return(mat)
}
data <- y$get()
mat <- solve(data)
y$setinv(mat)
mat
}
y = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(y)
m$get()
cacheSolve(m)
cacheSolve(m)
